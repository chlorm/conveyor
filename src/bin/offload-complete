#!/usr/bin/env bash
# Copyright (c) 2017, Cody Opel <codyopel@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Continuously uploads files at intervals until it recieves a SIGINT or SIGTERM.

set -o errexit
set -o errtrace
set -o functrace
set -o nounset
set -o pipefail

PREFIX="$(readlink -f "$(readlink -f "$(dirname "$(readlink -f "$0")")")"/..)"
source "$PREFIX/share/conveyor/common.bash"

trap 'kill -9 $RclonePid 2>&-; exit' SIGINT SIGTERM

while [ true ]; do
  clear_empty_dirs "$DOWNLOAD_COMPLETE_DIR"

  # The directory cleanup also removes $DOWNLOAD_COMPLETE_DIR if it is empty
  if [ ! -d "$DOWNLOAD_COMPLETE_DIR" ]; then
    echo 'no directory, sleeping 1h' >&2
    sleep 1h
    continue
  fi

  TestEmpty="$(find "$DOWNLOAD_COMPLETE_DIR" -type f || true)"
  if [ -z "$TestEmpty" ]; then
    echo 'no files, sleeping 1h' >&2
    sleep 1h
    continue
  fi

  # Ignore errors, handled manually for rclone.
  ! rc_move "$DOWNLOAD_COMPLETE_DIR" \
    "$RCLOME_REMOTE/$RCLONE_REMOTE_OFFLOAD_DIR" &
  RcloneExit=$?
  RclonePid=$!
  wait $RclonePid

  # FIXME: add logging or addtional error handling
  if [ $RcloneExit != 0 ]; then
    echo "rclone exited with $RcloneExit, sleeping 1h" >&2
    sleep 1h
  else
    clear_empty_dirs "$DOWNLOAD_COMPLETE_DIR"
    echo "success, sleeping 1h" >&2
    sleep 1h
  fi
done
